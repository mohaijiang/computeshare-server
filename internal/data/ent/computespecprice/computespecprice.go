// Code generated by ent, DO NOT EDIT.

package computespecprice

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the computespecprice type in the database.
	Label = "compute_spec_price"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldFkComputeSpecID holds the string denoting the fk_compute_spec_id field in the database.
	FieldFkComputeSpecID = "fk_compute_spec_id"
	// FieldDay holds the string denoting the day field in the database.
	FieldDay = "day"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// Table holds the table name of the computespecprice in the database.
	Table = "compute_spec_prices"
)

// Columns holds all SQL columns for computespecprice fields.
var Columns = []string{
	FieldID,
	FieldFkComputeSpecID,
	FieldDay,
	FieldPrice,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultDay holds the default value on creation for the "day" field.
	DefaultDay int32
	// DefaultPrice holds the default value on creation for the "price" field.
	DefaultPrice float32
)

// OrderOption defines the ordering options for the ComputeSpecPrice queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByFkComputeSpecID orders the results by the fk_compute_spec_id field.
func ByFkComputeSpecID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFkComputeSpecID, opts...).ToFunc()
}

// ByDay orders the results by the day field.
func ByDay(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDay, opts...).ToFunc()
}

// ByPrice orders the results by the price field.
func ByPrice(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPrice, opts...).ToFunc()
}
