// Code generated by ent, DO NOT EDIT.

package alipayorderrollback

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the alipayorderrollback type in the database.
	Label = "alipay_order_rollback"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldNotifyID holds the string denoting the notify_id field in the database.
	FieldNotifyID = "notify_id"
	// FieldNotifyType holds the string denoting the notify_type field in the database.
	FieldNotifyType = "notify_type"
	// FieldNotifyTime holds the string denoting the notify_time field in the database.
	FieldNotifyTime = "notify_time"
	// FieldCharset holds the string denoting the charset field in the database.
	FieldCharset = "charset"
	// FieldVersion holds the string denoting the version field in the database.
	FieldVersion = "version"
	// FieldSignType holds the string denoting the sign_type field in the database.
	FieldSignType = "sign_type"
	// FieldSign holds the string denoting the sign field in the database.
	FieldSign = "sign"
	// FieldFundBillList holds the string denoting the fund_bill_list field in the database.
	FieldFundBillList = "fund_bill_list"
	// FieldReceiptAmount holds the string denoting the receipt_amount field in the database.
	FieldReceiptAmount = "receipt_amount"
	// FieldInvoiceAmount holds the string denoting the invoice_amount field in the database.
	FieldInvoiceAmount = "invoice_amount"
	// FieldBuyerPayAmount holds the string denoting the buyer_pay_amount field in the database.
	FieldBuyerPayAmount = "buyer_pay_amount"
	// FieldPointAmount holds the string denoting the point_amount field in the database.
	FieldPointAmount = "point_amount"
	// FieldVoucherDetailList holds the string denoting the voucher_detail_list field in the database.
	FieldVoucherDetailList = "voucher_detail_list"
	// FieldPassbackParams holds the string denoting the passback_params field in the database.
	FieldPassbackParams = "passback_params"
	// FieldTradeNo holds the string denoting the trade_no field in the database.
	FieldTradeNo = "trade_no"
	// FieldAppID holds the string denoting the app_id field in the database.
	FieldAppID = "app_id"
	// FieldOutTradeNo holds the string denoting the out_trade_no field in the database.
	FieldOutTradeNo = "out_trade_no"
	// FieldOutBizNo holds the string denoting the out_biz_no field in the database.
	FieldOutBizNo = "out_biz_no"
	// FieldBuyerID holds the string denoting the buyer_id field in the database.
	FieldBuyerID = "buyer_id"
	// FieldSellerID holds the string denoting the seller_id field in the database.
	FieldSellerID = "seller_id"
	// FieldTradeStatus holds the string denoting the trade_status field in the database.
	FieldTradeStatus = "trade_status"
	// FieldTotalAmount holds the string denoting the total_amount field in the database.
	FieldTotalAmount = "total_amount"
	// FieldRefundFee holds the string denoting the refund_fee field in the database.
	FieldRefundFee = "refund_fee"
	// FieldSubject holds the string denoting the subject field in the database.
	FieldSubject = "subject"
	// FieldBody holds the string denoting the body field in the database.
	FieldBody = "body"
	// FieldGmtCreate holds the string denoting the gmt_create field in the database.
	FieldGmtCreate = "gmt_create"
	// FieldGmtPayment holds the string denoting the gmt_payment field in the database.
	FieldGmtPayment = "gmt_payment"
	// FieldGmtClose holds the string denoting the gmt_close field in the database.
	FieldGmtClose = "gmt_close"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// Table holds the table name of the alipayorderrollback in the database.
	Table = "alipay_order_rollbacks"
)

// Columns holds all SQL columns for alipayorderrollback fields.
var Columns = []string{
	FieldID,
	FieldNotifyID,
	FieldNotifyType,
	FieldNotifyTime,
	FieldCharset,
	FieldVersion,
	FieldSignType,
	FieldSign,
	FieldFundBillList,
	FieldReceiptAmount,
	FieldInvoiceAmount,
	FieldBuyerPayAmount,
	FieldPointAmount,
	FieldVoucherDetailList,
	FieldPassbackParams,
	FieldTradeNo,
	FieldAppID,
	FieldOutTradeNo,
	FieldOutBizNo,
	FieldBuyerID,
	FieldSellerID,
	FieldTradeStatus,
	FieldTotalAmount,
	FieldRefundFee,
	FieldSubject,
	FieldBody,
	FieldGmtCreate,
	FieldGmtPayment,
	FieldGmtClose,
	FieldCreateTime,
	FieldUpdateTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the AlipayOrderRollback queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByNotifyID orders the results by the notify_id field.
func ByNotifyID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldNotifyID, opts...).ToFunc()
}

// ByNotifyType orders the results by the notify_type field.
func ByNotifyType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldNotifyType, opts...).ToFunc()
}

// ByNotifyTime orders the results by the notify_time field.
func ByNotifyTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldNotifyTime, opts...).ToFunc()
}

// ByCharset orders the results by the charset field.
func ByCharset(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCharset, opts...).ToFunc()
}

// ByVersion orders the results by the version field.
func ByVersion(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldVersion, opts...).ToFunc()
}

// BySignType orders the results by the sign_type field.
func BySignType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSignType, opts...).ToFunc()
}

// BySign orders the results by the sign field.
func BySign(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSign, opts...).ToFunc()
}

// ByFundBillList orders the results by the fund_bill_list field.
func ByFundBillList(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFundBillList, opts...).ToFunc()
}

// ByReceiptAmount orders the results by the receipt_amount field.
func ByReceiptAmount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldReceiptAmount, opts...).ToFunc()
}

// ByInvoiceAmount orders the results by the invoice_amount field.
func ByInvoiceAmount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldInvoiceAmount, opts...).ToFunc()
}

// ByBuyerPayAmount orders the results by the buyer_pay_amount field.
func ByBuyerPayAmount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBuyerPayAmount, opts...).ToFunc()
}

// ByPointAmount orders the results by the point_amount field.
func ByPointAmount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPointAmount, opts...).ToFunc()
}

// ByVoucherDetailList orders the results by the voucher_detail_list field.
func ByVoucherDetailList(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldVoucherDetailList, opts...).ToFunc()
}

// ByPassbackParams orders the results by the passback_params field.
func ByPassbackParams(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPassbackParams, opts...).ToFunc()
}

// ByTradeNo orders the results by the trade_no field.
func ByTradeNo(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTradeNo, opts...).ToFunc()
}

// ByAppID orders the results by the app_id field.
func ByAppID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldAppID, opts...).ToFunc()
}

// ByOutTradeNo orders the results by the out_trade_no field.
func ByOutTradeNo(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOutTradeNo, opts...).ToFunc()
}

// ByOutBizNo orders the results by the out_biz_no field.
func ByOutBizNo(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldOutBizNo, opts...).ToFunc()
}

// ByBuyerID orders the results by the buyer_id field.
func ByBuyerID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBuyerID, opts...).ToFunc()
}

// BySellerID orders the results by the seller_id field.
func BySellerID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSellerID, opts...).ToFunc()
}

// ByTradeStatus orders the results by the trade_status field.
func ByTradeStatus(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTradeStatus, opts...).ToFunc()
}

// ByTotalAmount orders the results by the total_amount field.
func ByTotalAmount(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTotalAmount, opts...).ToFunc()
}

// ByRefundFee orders the results by the refund_fee field.
func ByRefundFee(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRefundFee, opts...).ToFunc()
}

// BySubject orders the results by the subject field.
func BySubject(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSubject, opts...).ToFunc()
}

// ByBody orders the results by the body field.
func ByBody(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldBody, opts...).ToFunc()
}

// ByGmtCreate orders the results by the gmt_create field.
func ByGmtCreate(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGmtCreate, opts...).ToFunc()
}

// ByGmtPayment orders the results by the gmt_payment field.
func ByGmtPayment(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGmtPayment, opts...).ToFunc()
}

// ByGmtClose orders the results by the gmt_close field.
func ByGmtClose(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGmtClose, opts...).ToFunc()
}

// ByCreateTime orders the results by the create_time field.
func ByCreateTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreateTime, opts...).ToFunc()
}

// ByUpdateTime orders the results by the update_time field.
func ByUpdateTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdateTime, opts...).ToFunc()
}
